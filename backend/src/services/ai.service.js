import { OpenAI } from 'openai';
import logger from '#config/logger.js';

// Initialize the Hugging Face client
const client = new OpenAI({
  baseURL: 'https://router.huggingface.co/v1',
  apiKey: process.env.HF_TOKEN,
});

/**
 * Generate a thoughtful weekly summary from journal entries
 * @param {Array} entries - Array of journal entries with content
 * @returns {Promise<string>} - AI generated summary
 */
export const generateWeeklySummary = async (entries) => {
  try {
    if (!entries || entries.length === 0) {
      throw new Error('No journal entries provided for summary');
    }

    // Combine all journal contents with dates for context
    const combinedText = entries
      .map(entry => {
        const date = entry.createdAt ? new Date(entry.createdAt).toDateString() : 'Recent';
        return `Date: ${date}\nTitle: ${entry.title || 'No title'}\nContent: ${entry.content}`;
      })
      .join('\n\n');

    // Create a thoughtful prompt for the AI
    const prompt = `Please provide a thoughtful and compassionate summary of the user's 7 most recent journal entries. 
           Focus on:
         - Emotional patterns and mood shifts across these entries
         - Key events, themes, or recurring topics
         - Personal growth, challenges, or realizations
         - Overall emotional journey through these recent writings

         Write it in a warm, reflective tone as if speaking to a friend who wrote these entries.
         Be empathetic and highlight both struggles and successes.

Recent Journal Entries:
${combinedText}

Thoughtful Summary:`;

    const chatCompletion = await client.chat.completions.create({
      model: 'meta-llama/Llama-3.3-70B-Instruct', // Using the confirmed working model
      messages: [
        {
          role: 'user',
          content: prompt,
        },
      ],
      max_tokens: 600, // Slightly longer for thoughtful summaries
      temperature: 0.7, // Balanced creativity
    });

    const summary = chatCompletion.choices[0]?.message?.content?.trim();
    
    if (!summary) {
      throw new Error('No summary generated by AI');
    }

    logger.info(`Weekly summary generated successfully for ${entries.length} entries`);
    return summary;

  } catch (error) {
    logger.error('Error generating weekly summary:', error);
    
    // Provide specific error messages
    if (error.message.includes('rate limit')) {
      throw new Error('AI service is busy. Please try again in a moment.');
    } else if (error.message.includes('authentication')) {
      throw new Error('AI service configuration error');
    } else {
      throw new Error(`Failed to generate summary: ${error.message}`);
    }
  }
};
