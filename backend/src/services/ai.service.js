import { OpenAI } from 'openai';
import logger from '#config/logger.js';

// Initialize the Hugging Face client
const client = new OpenAI({
  baseURL: 'https://router.huggingface.co/v1',
  apiKey: process.env.HF_TOKEN,
});

/**
 * Generate a thoughtful weekly summary from journal entries
 * @param {Array} entries - Array of journal entries with content
 * @returns {Promise<string>} - AI generated summary
 */
export const generateWeeklySummary = async (entries) => {
  try {
    if (!entries || entries.length === 0) {
      throw new Error('No journal entries provided for summary');
    }

    // Combine all journal contents with dates for context
    const combinedText = entries
      .map(entry => {
        const date = entry.createdAt ? new Date(entry.createdAt).toDateString() : 'Recent';
        return `Date: ${date}\nTitle: ${entry.title || 'No title'}\nContent: ${entry.content}`;
      })
      .join('\n\n');

    // Create a thoughtful prompt for the AI
    const prompt = `Summarize the user’s last 7 journal entries — keep it real, not a TED Talk.
Focus on:
Mood swings or emotional patterns
Recurring themes or drama
Growth moments (if any)
The overall vibe of their recent life saga

If they’re exaggerating or dodging the truth, call them out — gently but smartly.
Be a bit sarcastic, witty, and honest, but end on a respectful, grounded note that leaves them feeling understood.
Keep the summary average in length — insightful but not an essay.

Recent Journal Entries:
${combinedText}

Thoughtful Summary:`;

    const chatCompletion = await client.chat.completions.create({
      model: 'meta-llama/Llama-3.3-70B-Instruct', // Using the confirmed working model
      messages: [
        {
          role: 'user',
          content: prompt,
        },
      ],
      max_tokens: 600, // Slightly longer for thoughtful summaries
      temperature: 0.7, // Balanced creativity
    });

    const summary = chatCompletion.choices[0]?.message?.content?.trim();
    
    if (!summary) {
      throw new Error('No summary generated by AI');
    }

    logger.info(`Weekly summary generated successfully for ${entries.length} entries`);
    return summary;

  } catch (error) {
    logger.error('Error generating weekly summary:', error);
    
    // Provide specific error messages
    if (error.message.includes('rate limit')) {
      throw new Error('AI service is busy. Please try again in a moment.');
    } else if (error.message.includes('authentication')) {
      throw new Error('AI service configuration error');
    } else {
      throw new Error(`Failed to generate summary: ${error.message}`);
    }
  }
};
